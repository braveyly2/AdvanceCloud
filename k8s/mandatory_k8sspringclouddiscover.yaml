apiVersion: v1
kind: Namespace
metadata:
  name: springcloudk8s

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: springcloudkubernetesdiscover-configuration
  namespace: springcloudk8s
  labels:
    app: springcloudkubernetesdiscover

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: springcloudkubernetesdiscover-serviceaccount
  namespace: springcloudk8s
  labels:
    app: springcloudkubernetesdiscover

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: springcloudkubernetesdiscover-clusterrole
  labels:
    app: springcloudkubernetesdiscover
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - services
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses/status
    verbs:
      - update

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: springcloudkubernetesdiscover-role
  namespace: springcloudk8s
  labels:
    app: springcloudkubernetesdiscover
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
      - nodes
      - services
      - deployments
    verbs:
      - get
      - watch
      - list
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: springcloudkubernetesdiscover-nisa-binding
  namespace: springcloudk8s
  labels:
    app: springcloudkubernetesdiscover
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: springcloudkubernetesdiscover-role
subjects:
  - kind: ServiceAccount
    name: springcloudkubernetesdiscover-serviceaccount
    namespace: springcloudk8s

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: springcloudkubernetesdiscover-clusterrole-nisa-binding
  labels:
    app: springcloudkubernetesdiscover
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: springcloudkubernetesdiscover-clusterrole
subjects:
  - kind: ServiceAccount
    name: springcloudkubernetesdiscover-serviceaccount
    namespace: springcloudk8s

---
---
apiVersion: v1
kind: Service
metadata:
  name: springcloudkubernetesdiscover
  namespace: springcloudk8s
  labels:
    app: springcloudkubernetesdiscover
spec:
  type: NodePort
  ports:
    - port: 8011
      targetPort: 8011
      nodePort: 30089
  selector:
    app: springcloudkubernetesdiscover

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: springcloudkubernetesdiscover
  labels:
    app: springcloudkubernetesdiscover
  namespace: springcloudk8s
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springcloudkubernetesdiscover
  template:
    metadata:
      labels:
        app: springcloudkubernetesdiscover
    spec:
      #terminationGracePeriodSeconds: 60
      serviceAccountName: springcloudkubernetesdiscover-serviceaccount
      containers:
        - name: springcloudkubernetesdiscover
          # Any image is permissible as long as:
          # 1. It serves a 404 page at /
          # 2. It serves 200 on a /healthz endpoint
          image: 10.0.2.7:5000/springcloudk8sdiscovery3:latest
          #livenessProbe:
          #  httpGet:
          #    path: /health
          #    port: 8099
          #    scheme: HTTP
          #  initialDelaySeconds: 30
          #  timeoutSeconds: 5
          ports:
            - containerPort: 8011
          #resources:
          #  limits:
          #    cpu: 10m
          #    memory: 20Mi
          #  requests:
          #    cpu: 10m
          #    memory: 20Mi

